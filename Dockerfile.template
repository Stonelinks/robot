FROM resin/%%RESIN_MACHINE_NAME%%-alpine:latest

# Defines our working directory in container
WORKDIR /usr/src/app

# Copies the package.json first for better cache on later pushes
COPY package.json package.json

# This will copy all files in our root to the working directory in the container
COPY . ./

RUN apk add --update \
    ffmpeg \
    gcc \
    g++ \
    nodejs \
    make \
    curl \
    musl-dev

RUN npm install yarn
RUN ./node_modules/.bin/yarn install

#RUN npm install

#RUN npm cache clean \
#  && rm -rf /tmp/* \
#  && apk del gcc g++ make musl-dev \
#

#RUN apk add --update \
#    ffmpeg \
#    gcc \
#    g++ \
#    nodejs \
#    make \
#    curl \
#    musl-dev \
#  && npm install -g yarn \
#  && yarn install \
#  && yarn cache clean \
#  && npm cache clean \
#  && rm -rf /tmp/* \
#  && apk del gcc g++ make musl-dev \
#  && rm -rf /var/cache/apk/*
#  && rm -rf /var/cache/apk/*

RUN npm run build:client

CMD ["npm", "run", "server"]
